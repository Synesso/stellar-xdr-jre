// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.xdr;

import com.google.common.base.Objects;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import okio.ByteString;

// === xdr source ============================================================

//  union SetOptionsResult switch (SetOptionsResultCode code)
//  {
//  case SET_OPTIONS_SUCCESS:
//      void;
//  default:
//      void;
//  };

//  ===========================================================================
public class SetOptionsResult implements XdrElement {
  SetOptionsResultCode code;

  public SetOptionsResult() {
  }

  public static void encode(XdrDataOutputStream stream, SetOptionsResult encodedSetOptionsResult) throws IOException {
    //Xdrgen::AST::Identifier
    //SetOptionsResultCode
    stream.writeInt(encodedSetOptionsResult.getDiscriminant().getValue());
    switch (encodedSetOptionsResult.getDiscriminant()) {
      case SET_OPTIONS_SUCCESS:
        break;
      default:
        break;
    }
  }

  public static SetOptionsResult decode(ByteString bs) throws IOException {
    return decode(new XdrDataInputStream(new ByteArrayInputStream(bs.toByteArray())));
  }

  public static SetOptionsResult decode(XdrDataInputStream stream) throws IOException {
    SetOptionsResult decodedSetOptionsResult = new SetOptionsResult();
    SetOptionsResultCode discriminant = SetOptionsResultCode.decode(stream);
    decodedSetOptionsResult.setDiscriminant(discriminant);
    switch (decodedSetOptionsResult.getDiscriminant()) {
      case SET_OPTIONS_SUCCESS:
        break;
      default:
        break;
    }
    return decodedSetOptionsResult;
  }

  public SetOptionsResultCode getDiscriminant() {
    return this.code;
  }

  public void setDiscriminant(SetOptionsResultCode value) {
    this.code = value;
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public ByteString encode() throws IOException {
    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();
    XdrDataOutputStream xdrOutputStream = new XdrDataOutputStream(byteStream);
    encode(xdrOutputStream);
    return new ByteString(byteStream.toByteArray());
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.code);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof SetOptionsResult)) {
      return false;
    }

    SetOptionsResult other = (SetOptionsResult) object;
    return Objects.equal(this.code, other.code);
  }

  public static final class Builder {
    private SetOptionsResultCode discriminant;

    public Builder discriminant(SetOptionsResultCode discriminant) {
      this.discriminant = discriminant;
      return this;
    }

    public SetOptionsResult build() {
      SetOptionsResult val = new SetOptionsResult();
      val.setDiscriminant(discriminant);
      return val;
    }
  }
}
