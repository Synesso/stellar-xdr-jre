// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.xdr;

import com.google.common.base.Objects;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import okio.ByteString;

// === xdr source ============================================================

//  struct SignedSurveyResponseMessage
//  {
//      Signature responseSignature;
//      SurveyResponseMessage response;
//  };

//  ===========================================================================
public class SignedSurveyResponseMessage implements XdrElement {
  private Signature responseSignature;
  private SurveyResponseMessage response;

  public SignedSurveyResponseMessage() {
  }

  public static void encode(XdrDataOutputStream stream, SignedSurveyResponseMessage encodedSignedSurveyResponseMessage)
      throws IOException {
    Signature.encode(stream, encodedSignedSurveyResponseMessage.responseSignature);
    SurveyResponseMessage.encode(stream, encodedSignedSurveyResponseMessage.response);
  }

  public static SignedSurveyResponseMessage decode(ByteString bs) throws IOException {
    return decode(new XdrDataInputStream(new ByteArrayInputStream(bs.toByteArray())));
  }

  public static SignedSurveyResponseMessage decode(XdrDataInputStream stream) throws IOException {
    SignedSurveyResponseMessage decodedSignedSurveyResponseMessage = new SignedSurveyResponseMessage();
    decodedSignedSurveyResponseMessage.responseSignature = Signature.decode(stream);
    decodedSignedSurveyResponseMessage.response = SurveyResponseMessage.decode(stream);
    return decodedSignedSurveyResponseMessage;
  }

  public Signature getResponseSignature() {
    return this.responseSignature;
  }

  public void setResponseSignature(Signature value) {
    this.responseSignature = value;
  }

  public SurveyResponseMessage getResponse() {
    return this.response;
  }

  public void setResponse(SurveyResponseMessage value) {
    this.response = value;
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public ByteString encode() throws IOException {
    ByteArrayOutputStream byteStream = new ByteArrayOutputStream();
    XdrDataOutputStream xdrOutputStream = new XdrDataOutputStream(byteStream);
    encode(xdrOutputStream);
    return new ByteString(byteStream.toByteArray());
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.responseSignature, this.response);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof SignedSurveyResponseMessage)) {
      return false;
    }

    SignedSurveyResponseMessage other = (SignedSurveyResponseMessage) object;
    return Objects.equal(this.responseSignature, other.responseSignature) && Objects.equal(this.response,
        other.response);
  }

  public static final class Builder {
    private Signature responseSignature;
    private SurveyResponseMessage response;

    public Builder responseSignature(Signature responseSignature) {
      this.responseSignature = responseSignature;
      return this;
    }

    public Builder response(SurveyResponseMessage response) {
      this.response = response;
      return this;
    }

    public SignedSurveyResponseMessage build() {
      SignedSurveyResponseMessage val = new SignedSurveyResponseMessage();
      val.setResponseSignature(responseSignature);
      val.setResponse(response);
      return val;
    }
  }
}
