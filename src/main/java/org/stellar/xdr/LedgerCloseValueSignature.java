// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.xdr;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  struct LedgerCloseValueSignature
//  {
//      NodeID nodeID;       // which node introduced the value
//      Signature signature; // nodeID's signature
//  };

//  ===========================================================================
public class LedgerCloseValueSignature implements XdrElement {
  private NodeID nodeID;
  private Signature signature;

  public LedgerCloseValueSignature() {
  }

  public static void encode(XdrDataOutputStream stream, LedgerCloseValueSignature encodedLedgerCloseValueSignature)
      throws IOException {
    NodeID.encode(stream, encodedLedgerCloseValueSignature.nodeID);
    Signature.encode(stream, encodedLedgerCloseValueSignature.signature);
  }

  public static LedgerCloseValueSignature decode(XdrDataInputStream stream) throws IOException {
    LedgerCloseValueSignature decodedLedgerCloseValueSignature = new LedgerCloseValueSignature();
    decodedLedgerCloseValueSignature.nodeID = NodeID.decode(stream);
    decodedLedgerCloseValueSignature.signature = Signature.decode(stream);
    return decodedLedgerCloseValueSignature;
  }

  public NodeID getNodeID() {
    return this.nodeID;
  }

  public void setNodeID(NodeID value) {
    this.nodeID = value;
  }

  public Signature getSignature() {
    return this.signature;
  }

  public void setSignature(Signature value) {
    this.signature = value;
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.nodeID, this.signature);
  }

  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof LedgerCloseValueSignature)) {
      return false;
    }

    LedgerCloseValueSignature other = (LedgerCloseValueSignature) object;
    return Objects.equal(this.nodeID, other.nodeID) && Objects.equal(this.signature, other.signature);
  }
}
