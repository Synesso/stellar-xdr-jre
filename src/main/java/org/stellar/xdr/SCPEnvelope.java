// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.xdr;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  struct SCPEnvelope
//  {
//      SCPStatement statement;
//      Signature signature;
//  };

//  ===========================================================================
public class SCPEnvelope implements XdrElement {
  private SCPStatement statement;
  private Signature signature;

  public SCPEnvelope() {
  }

  public static void encode(XdrDataOutputStream stream, SCPEnvelope encodedSCPEnvelope) throws IOException {
    SCPStatement.encode(stream, encodedSCPEnvelope.statement);
    Signature.encode(stream, encodedSCPEnvelope.signature);
  }

  public static SCPEnvelope decode(XdrDataInputStream stream) throws IOException {
    SCPEnvelope decodedSCPEnvelope = new SCPEnvelope();
    decodedSCPEnvelope.statement = SCPStatement.decode(stream);
    decodedSCPEnvelope.signature = Signature.decode(stream);
    return decodedSCPEnvelope;
  }

  public SCPStatement getStatement() {
    return this.statement;
  }

  public void setStatement(SCPStatement value) {
    this.statement = value;
  }

  public Signature getSignature() {
    return this.signature;
  }

  public void setSignature(Signature value) {
    this.signature = value;
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.statement, this.signature);
  }

  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof SCPEnvelope)) {
      return false;
    }

    SCPEnvelope other = (SCPEnvelope) object;
    return Objects.equal(this.statement, other.statement) && Objects.equal(this.signature, other.signature);
  }
}
