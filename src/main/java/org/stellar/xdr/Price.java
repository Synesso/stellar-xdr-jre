// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.xdr;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  struct Price
//  {
//      int32 n; // numerator
//      int32 d; // denominator
//  };

//  ===========================================================================
public class Price implements XdrElement {
  private Int32 n;
  private Int32 d;

  public Price() {
  }

  public static void encode(XdrDataOutputStream stream, Price encodedPrice) throws IOException {
    Int32.encode(stream, encodedPrice.n);
    Int32.encode(stream, encodedPrice.d);
  }

  public static Price decode(XdrDataInputStream stream) throws IOException {
    Price decodedPrice = new Price();
    decodedPrice.n = Int32.decode(stream);
    decodedPrice.d = Int32.decode(stream);
    return decodedPrice;
  }

  public Int32 getN() {
    return this.n;
  }

  public void setN(Int32 value) {
    this.n = value;
  }

  public Int32 getD() {
    return this.d;
  }

  public void setD(Int32 value) {
    this.d = value;
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.n, this.d);
  }

  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof Price)) {
      return false;
    }

    Price other = (Price) object;
    return Objects.equal(this.n, other.n) && Objects.equal(this.d, other.d);
  }
}
